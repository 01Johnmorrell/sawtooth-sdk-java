#!/bin/bash

set -e

find_packages() {
    topdir=$1

    pushd $1 1>/dev/null

    directories=$(find . -maxdepth 2 -name __init__.py | awk -F/ '{print $2}')

    if [ -d "$topdir/tests" ]; then
        directories="$directories tests"
    fi

    for dir in $directories
    do
        for file in $(find $dir -name \*.py)
        do
            [ $file = "signing/sawtooth_signing/ECDSA/ECDSARecoverModule.py" ] && continue
            [ $file = "sawtooth_validator/consensus/poet0/Enclave/EnclaveModule.py" ] && continue
            [ $file = "sawtooth_validator/consensus/poet0/poet_enclave_simulator/poet0_enclave_simulator.py" ] && continue
            [ $file = "consensus/poet0/Enclave/EnclaveModule.py" ] && continue
            [ $file = "consensus/poet0/poet_enclave_simulator/poet0_enclave_simulator.py" ] && continue


            echo "$topdir/$file"
        done
    done

    popd 1>/dev/null
}

top_dir=$(cd $(dirname $(dirname $0)) && pwd)

PYTHONPATH=$top_dir/core
PYTHONPATH=$PYTHONPATH:$top_dir/core/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/validator/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/extensions/mktplace
PYTHONPATH=$PYTHONPATH:$top_dir/extensions/arcade
export PYTHONPATH
pep8 --config=.pep8

pylint \
    --rcfile=.pylintrc-strict \
    --reports=no \
    $(find_packages core/sawtooth)

PYTHONPATH=$top_dir/core
PYTHONPATH=$PYTHONPATH:$top_dir/core/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/validator/build/lib.linux-x86_64-2.7
export PYTHONPATH

pylint \
    --rcfile=.pylintrc-core \
    --reports=no \
    $(find_packages core)

PYTHONPATH=$top_dir/core
PYTHONPATH=$PYTHONPATH:$top_dir/core/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/validator/build/lib.linux-x86_64-2.7
export PYTHONPATH

pylint \
    --rcfile=.pylintrc-strict \
    --reports=no \
    $(find_packages validator/sawtooth_validator)

pylint \
    --rcfile=.pylintrc-validator \
    --reports=no \
    $(find_packages validator)

PYTHONPATH=$top_dir/core
PYTHONPATH=$PYTHONPATH:$top_dir/core/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/validator/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/extensions/mktplace
export PYTHONPATH

pylint \
    --rcfile=.pylintrc-mktplace \
    --reports=no \
    $(find_packages extensions/mktplace)

PYTHONPATH=$top_dir/core
PYTHONPATH=$PYTHONPATH:$top_dir/core/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/validator/build/lib.linux-x86_64-2.7
PYTHONPATH=$PYTHONPATH:$top_dir/extensions/arcade
export PYTHONPATH

pylint \
    --rcfile=.pylintrc-arcade \
    --reports=no \
    $(find_packages extensions/arcade)

# check for windows line endings.  Note that grep returns 0 if it
# finds something, and 1 if it doesn't.  In our case, finding something
# is an error, so we want to flip a 0 to a 1 and a 1 to a 0, thus
# the ! at the beginning of the command.

! find $top_dir -name \*.py -exec file {} \; | grep CRLF
