#!/bin/bash
#
# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

usage() {
    echo "Usage:"
    echo "  $0 [-m Module]"
    echo
    echo "Options:"
    echo "  -h          print usage and exit"
    echo "  -m Module   only run tests of specified module <core, signing, validator, arcade>"
}

set -e

top_dir=$(cd $(dirname $(dirname $0)) && pwd)

PATH=$top_dir/bin:$PATH
export PATH

test_core() {
    PYTHONPATH=$top_dir/core
    export PYTHONPATH
    cd core
    nose2 -v
    cd ..
}

test_sdk_examples() {
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
    PYTHONPATH=$PYTHONPATH:$top_dir/sdk/examples
    PYTHONPATH=$PYTHONPATH:$top_dir/integration
    export PYTHONPATH
    cd integration/sawtooth_integration/test_suites
    run_tp_test tp_intkey_python ts_tp_intkey.TestSuiteIntkey
    run_tp_test tp_xo_python ts_tp_xo.TestSuiteXo
    cd ../../../
}

test_docker() {
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/sdk/examples
    PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
    export PYTHONPATH
    cd integration/sawtooth_integration
    run_docker_test docker/tp-intkey-python.yaml -s validator
    run_docker_test docker/intkey-load-python.yaml -s integration_test
    run_docker_test docker/tp-xo-python.yaml -s validator
    run_docker_test docker/xo-smoke.yaml -s integration_test
    cd ../../
}

test_tp_config() {
    config_dir=$top_dir/core_transactions/config
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
    PYTHONPATH=$PYTHONPATH:$config_dir
    PYTHONPATH=$PYTHONPATH:$config_dir/tests
    export PYTHONPATH
    echo $PYTHONPATH
    nose2-3 -s $config_dir/tests sawtooth_config_test.ts_config.TestSuiteConfig
}

test_signing() {
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/signing
    PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
    export PYTHONPATH
    cd signing
    nose2 -v
    cd ..

    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/signing
    PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-3.5
    export PYTHONPATH
    cd signing
    nose2-3 -v
    cd ..
}

test_validator() {
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/signing
    PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-2.7
    PYTHONPATH=$PYTHONPATH:$top_dir/core
    PYTHONPATH=$PYTHONPATH:$top_dir/validator
    export PYTHONPATH
    cd validator
    nose2 -v unit

    export RUN_TEST_SUITES=1
    nose2 -v sawtooth_suites.ts_pr_dev_mode.DevModeTestSuite
    nose2 -v sawtooth_suites.ts_pr_poet1.Poet1TestSuite
    unset RUN_TEST_SUITES

    # Disable nose2-3 within docker container until bugs can be resolved.
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/signing
    PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-3.5
    PYTHONPATH=$PYTHONPATH:$top_dir/core
    PYTHONPATH=$PYTHONPATH:$top_dir/validator
    export PYTHONPATH
    if [ -e /.dockerenv ]; then
        true
    else
        nose2-3 -v unit3
    fi
    cd ..
}

test_cli() {
    PYTHONPATH=$top_dir
    PYTHONPATH=$PYTHONPATH:$top_dir/signing
    PYTHONPATH=$PYTHONPATH:$top_dir/signing/build/lib.linux-x86_64-3.5
    PYTHONPATH=$PYTHONPATH:$top_dir/cli
    export PYTHONPATH
    nose2-3 -s $top_dir/cli/tests
}


MODULE="all"
while getopts :m:h opt
do
    case $opt in
        h)
            usage
            exit 0
            ;;
        m)
            MODULE=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 2
            ;;
    esac
done

case $MODULE in
    all)
        test_sdk_examples
        test_tp_config
        test_core
        test_cli
        test_signing
        test_validator
        ;;
    core)
        test_core
        ;;
    cli)
        test_cli
        ;;
    signing)
        test_signing
        ;;
    validator)
        test_validator
        ;;
    sdk_examples)
        test_sdk_examples
        ;;
    tp_config)
        test_tp_config
        ;;
    docker)
        test_docker
        ;;
esac
